# see https://github.com/lspitzner/iridium
#
# note that you can add a user-global .iridium.yaml
# into $HOME, containing e.g.
#
# ---
# setup:
#   compiler-paths:
#     ghc-7.10.3: /opt/ghc-7.10.3/bin/ghc
#     ghc-7.8.4:  /opt/ghc-7.8.4/bin/ghc
#
#   default-compiler: ghc-7.10.3
# 
#   hackage:
#     username: user
# ...

---
setup:
  buildtool-help: |
    cannot be changed; stack is not supported (yet).
  buildtool: cabal

  cabal-command-help: |
    "cabal-command: cabal"
  hlint-command-help: |
    "hlint-command: $HOME/.cabal/bin/hlint"

  remote-server-help: ! 'This currently only checks that uploads happen to that remote,
    it does not change the remote if a different one is configured.
    (because that would require modifying `.cabal/config`,)'
  remote-server: http://hackage.haskell.org

  run-cabal-update: True
  run-cabal-update-help: ! 'Execute cabal update before performing any checks.
    Useful when running the stackage upper bounds check, which may erroneously
    report errors if your cabal package index is not up to date.'

process:
  dry-run-help: |
    only run all checks/tests, omit any side-effects/uploading
  dry-run: False 

  display-help: True

  upload-docs-help: |
    build docs locally and upload them instead of trusting the
    docs builder which gets broken every two months.
    implies the documentation check.
  upload-docs: True
  
  print-summary: True

  confirmation-help: |
    confirm-always     always ask for confirmation.
    confirm-on-warning don't ask for confirmation if everything is clear.
    confirm-on-error   only ask for confirmation if there are errors.
  confirmation: confirm-always

checks:
  hlint:
    enabled: False
  testsuites:
    enabled: True
  compiler-warnings:
    enabled: True
    enable-compat: True

    # whitelist: [only, these, tests] # not supported yet
    # blacklist: [omit, these, tests] # not supported yet

  package-sdist-help: |
    Check that the created source distribution package will
    actually work (for other users). This can for example
    be not the case when you fail to mention specific files
    in your package description.
  package-sdist:
    enabled: True
  
  upper-bounds-stackage-help: |
    if you are completely unlucky, this might _overwrite_
    an existing cabal.config. if you press ctrl-c in exactly
    the right moment or something.
  upper-bounds-stackage:
    enabled-help: |
      for existing upper bounds
    enabled: False
    use-nightly: False
    # blacklist: [omit, check, for, these, packages] # not supported yet
  lower-bounds-exist:
    enabled: True
  upper-bounds-exist:
    enabled: True
  changelog:
    enabled: True
    location: ChangeLog.md
  compiler-versions:
    enabled: False
    compilers-help: |
      for this to work, cabal will need the paths to the actual
      compilers to be configured; see the note about the user-global
      config above.
    compilers:
      - compiler: ghc
        version: 7.0.4
      - compiler: ghc
        version: 7.2.2
      - compiler: ghc
        version: 7.4.2
      - compiler: ghc
        version: 7.6.3
      - compiler: ghc
        version: 7.8.4
      - compiler: ghc
        version: 7.10.3
  documentation:
    enabled: True

repository:
  type-help: |
    none | git
  type: none
  git:
    display-current-branch: True
    release-tag:
      enabled: True
      content: "$VERSION"
      # params: [] # NOT YET SUPPORTED !
    push-remote-help: |
      push the current branch (and the tag, if configured) to
      a remote repo.
    push-remote:
      enabled: True
      remote-name-help: |
        the "remote" configured in git to push the release/tag to.
        remote-name: "origin"
...
